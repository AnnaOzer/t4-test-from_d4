t4 не предоставляет базовой системы авторизации
он надеется, что эту систему авторизации вы напишете самостоятельно в своем приложении
потому что считается, что это не часть фреймворка вообще
в стандартном приложении когда-то была реализована авторизация
но в нем система авторизации не более чем шаблон
в каждом вашем приложении система автороизации должна быть своя

шаблон-мастер-класс

сначала создать таблицы и модели как всегда в фреймворке делается всё
очевидно будут пользователи
вероятно роли пользователей
пользователи как-то будут связаны с ролями
будет табличка где будут храниться пользовательские сессии
    (табличка в которой отмечается кто из пользователей сейчас на сайте, когда он зашел,
    когда авторизовался, некий уникальный код его сессии/авторизации на сайте)

таблицы создаются с помощью миграций
принято таблицы пользователи, роли и тд
создавать в тн нулевой миграции 000...0001
и там создать самые главные таблицы
системные таблицы начинать с __ например __users
(системные таблицы приложения, а не относящиеся к его данным)
поля например registered или lastvisit можно спокойно удалить без ущерба для себя

'registered' => ['type' => 'datetime'],
'lastvisit' => ['type' => 'datetime'],

важно, email объявляем уникальным индексом и будем его вместо логина использовать
т.е. создаем таблицу, первый массив полЯ, второй - индексы

таблица роли, имя это админ, название это администратор русскими буквами

в миграциях можно вставлять данные через метод $this->insert

в списке полей пользовательских сессий писалось в стандартном приложении
'hash' => ['type' => 'string'],
            '__user_id' => ['type' => 'link'],
            'userAgentHash' => ['type' => 'string']
 тут у себя третью строчку уберем

 сессия у нас некий хеш, уникальное длинное число, и пользователь, который у нас сейчас на сайт залогинен
 для чего нужна эта таблица
 если пользователь у неас на сайт зашел, там будет запись про него
 если пользоватлеь вышел, запись о нем будет из таблицы юзерсешн удаляться
на каждый вход будет генериться хеш, уникальный длинный номер его сессии
этот же номер будет записываться в куку пользователю
примерно так и будет происходить авторизация

---
хранить пароль - результат после работы ф-ции password_hash
эта функция берет максиммально криптостойкий алгоритм и хеширует им пароль
и надо хранить в базе именно такой хеш
надо забыть про самодельные ф-ции преобразования пароля,
про md5, sha1, sha2
про попытки самим делать соль
этот пароль мы и должны вставить как пароль администратора в нулевую миграцию
запомнив для себя, что это был за пароль

также есть ф-ция пассворд верифай
